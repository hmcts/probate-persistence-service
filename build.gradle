import java.util.stream.Collectors

buildscript {
    dependencies {
        classpath group: 'org.sonarsource.scanner.gradle', name: 'sonarqube-gradle-plugin', version: '2.5'
        classpath("net.serenity-bdd:serenity-gradle-plugin:1.5.2")
    }
}

plugins {
    id 'application'
    id 'pmd'
    id 'org.springframework.boot' version '1.5.13.RELEASE'
    id 'org.owasp.dependencycheck' version '3.2.1'
    id 'com.github.ben-manes.versions' version '0.15.0'
    id 'org.liquibase.gradle' version '1.2.4'
    id 'com.gorylenko.gradle-git-properties' version '1.4.21'
}

apply plugin: 'org.sonarqube'
apply plugin: 'findbugs'
apply plugin: 'jacoco'
apply plugin: 'liquibase'
apply plugin: 'net.serenity-bdd.aggregator'

gitProperties {
    keys = ['git.commit.id','git.commit.time']
    dateFormat = "yyyy-MM-dd'T'HH:mmZ"
    dateFormatTimeZone = "GMT"
}

group = 'uk.gov.hmcts.probate'
version = "4.1.0"
mainClassName = 'uk.gov.hmcts.probate.services.persistence.Application'

sourceCompatibility = 1.8
targetCompatibility = 1.8

check.dependsOn dependencyCheckAnalyze

jacoco {
    toolVersion = '0.8.0'
}

jacocoTestReport {
    group = "Reporting"
    reports {
        xml.enabled false
        html.destination "${buildDir}/reports/jacoco"
    }
}

tasks.withType(FindBugs) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

findbugs{
    ignoreFailures=true
    reportLevel = "low"
}

sonarqube {
    properties {
        property "sonar.projectName", "Probate :: Persistence Service"
        property "sonar.jacoco.reportPath", "${project.buildDir}/jacoco/test.exec"
        property "sonar.host.url", "https://sonar.reform.hmcts.net/"
    }
}

test.finalizedBy jacocoTestReport

dependencyCheck {
    failBuildOnCVSS = System.getProperty('dependencyCheck.failBuild') == 'true' ? 0 : 11
    suppressionFile = 'config/owasp/suppressions.xml'
    scanConfigurations = ['compile']
}

sourceSets {
    testSmoke {
        java {
            compileClasspath += main.output
            runtimeClasspath += main.output
            srcDir file('src/smokeTest/java')
        }
        resources.srcDir file('src/smokeTest/resources')
    }
    testFunctional {
        java {
            compileClasspath += main.output
            runtimeClasspath += main.output
            srcDir file('src/functionalTest/java')
        }
        resources.srcDir file('src/functionalTest/resources')
    }
}

task smoke(type: Test) {
  description = "Runs Smoke Tests"
  testClassesDirs = sourceSets.testSmoke.output.classesDirs
  classpath = sourceSets.testSmoke.runtimeClasspath
}

task functional(type: Test) {
    description = "Runs functional Tests"
    testClassesDirs = sourceSets.testFunctional.output.classesDirs
    classpath = sourceSets.testFunctional.runtimeClasspath
    finalizedBy aggregate
}

pmd {
  toolVersion = "6.3.0"
  ignoreFailures = true
  sourceSets = [sourceSets.main, sourceSets.test, sourceSets.testFunctional, sourceSets.testSmoke]
  reportsDir = file("$project.buildDir/reports/pmd")
  ruleSetFiles = files("config/pmd/ruleset.xml")
}

def reformsJavaLoggingVersion = '2.0.2'

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
    maven { url "http://artifactory.reform.hmcts.net/artifactory/libs-release" }
    maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
    maven { url  "https://dl.bintray.com/hmcts/hmcts-maven" }
    maven { url "http://repo.maven.apache.org/maven2" }

}

distributions {
    main {
        contents {
            from(file("$projectDir/libs/AI-Agent.xml")) {
                into "lib"
            }
        }
    }
}

def versions = [
        logging: '2.2.1'
]

dependencies {

    compile ('org.springframework.boot:spring-boot-starter-actuator')
    compile ('org.springframework.boot:spring-boot-starter-data-rest')
    compile ('org.springframework.boot:spring-boot-starter-data-jpa')
    
    compile ('org.postgresql:postgresql:42.2.2') {
        exclude module: 'slf4j-simple'
    }

//    compile group: 'org.liquibase.ext', name:'liquibase-hibernate5', version: '3.6'
//    compile group: 'uk.gov.hmcts.reform', name: 'java-logging', version: versions.logging

    compile group: 'uk.gov.hmcts.reform', name: 'java-logging-spring', version: versions.logging
    compile group: 'uk.gov.hmcts.reform', name: 'java-logging-httpcomponents', version: versions.logging
    compile group: 'uk.gov.hmcts.reform', name: 'java-logging-appinsights', version: versions.logging

    testCompile group: 'com.google.code.findbugs', name: 'findbugs', version: '3.0.1'

    testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test'

    compile group: 'org.springframework.hateoas', name: 'spring-hateoas', version: '0.23.0.RELEASE'

    testFunctionalCompile group: 'net.serenity-bdd', name: 'serenity-junit', version: '1.5.2'
    testFunctionalCompile group: 'net.serenity-bdd', name: 'serenity-core', version: '1.5.2'
    testFunctionalCompile group: 'net.serenity-bdd', name: 'serenity-rest-assured', version: '1.5.2'
    testFunctionalCompile group: 'net.serenity-bdd', name: 'serenity-spring', version: '1.0.26'
    testFunctionalCompile group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.0'
    testFunctionalCompile sourceSets.main.runtimeClasspath
    testFunctionalCompile sourceSets.test.runtimeClasspath

    testCompile group: 'io.rest-assured', name: 'rest-assured', version: '3.0.7'
    testSmokeCompile sourceSets.main.runtimeClasspath
    testSmokeCompile sourceSets.test.runtimeClasspath
}

compileJava {
    options.compilerArgs << '-parameters'
}

jar {
    archiveName = 'persistence-service.jar'
    manifest {

        attributes 'Implementation-Title': project.name,
                'Implementation-Version': project.version
    }
}

task printVersion {
    doLast {
        print project.version
    }
}

run {
    if (debug == 'true') {
        jvmArgs = ['-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=5005']
    }
}
