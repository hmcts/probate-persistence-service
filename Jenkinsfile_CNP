#!groovy

@Library("Infrastructure")

String product = "probate"
String component = "persistence-service"

List<LinkedHashMap<String, Object>> secrets = [

]

static LinkedHashMap<String, Object> secret(String secretName, String envVar) {
  [ $class: 'AzureKeyVaultSecret',
    secretType: 'Secret',
    name: secretName,
    version: '',
    envVariable: envVar
  ]
}

withPipeline("java", product, component) {
  before('buildinfra:prod') {
    currentBuild.result = 'SUCCESS'
    sh "exit 0"  
  }
  loadVaultSecrets(secrets)
  enableDbMigration()  // for liquibase update
  //enableSlackNotifications('#probate-jenkins')
  after('test') {
    try {
      sh './gradlew pitest'
    } finally {
      steps.archiveArtifacts "build/reports/pitest/**/*.*"
    }

    publishHTML target: [
            alwaysLinkToLastBuild: true,
            reportDir            : "build/reports/tests/test",
            reportFiles          : "index.html",
            reportName           : "sol-ccd-service Test Report"
    ]

    publishHTML target: [
            alwaysLinkToLastBuild: true,
            reportDir            : "build/reports/jacoco",
            reportFiles          : "index.html",
            reportName           : "sol-ccd-service Code Coverage Report"
    ]

    publishHTML target: [
            alwaysLinkToLastBuild: true,
            reportDir            : "build/reports/findbugs",
            reportFiles          : "main.html",
            reportName           : "sol-ccd-service find Bugs Report"
    ]
  }

  after('functionalTest:saat') {
      publishHTML target: [
              reportDir            : "target/site/serenity/",
              reportFiles          : "index.html",
              reportName           : "SAAT Functional Tests",
              alwaysLinkToLastBuild: true
      ]
  }
}
