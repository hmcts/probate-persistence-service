#!groovy
//noinspection GroovyUnusedAssignment
@Library("Infrastructure") _


//noinspection GroovyAssignabilityCheck
properties([
		parameters([
			choice(name: 'ENVIRONMENT', choices: 'sandbox\nsaat\nsprod\nnonprod\nprod', description: 'Environment where code should be build and deployed')
		])
])


String product = "probate"
String component = "persistence-service"

withParameterizedPipeline('java', product, component, params.ENVIRONMENT, 'sandbox') {
    enableDbMigration() // for liquibase update
    after('test') {
        publishHTML target: [
                alwaysLinkToLastBuild: true,
                reportDir            : "build/reports/tests/test",
                reportFiles          : "index.html",
                reportName           : "sol-ccd-service Test Report"
        ]

        publishHTML target: [
                alwaysLinkToLastBuild: true,
                reportDir            : "build/reports/jacoco",
                reportFiles          : "index.html",
                reportName           : "sol-ccd-service Code Coverage Report"
        ]
    }
}

